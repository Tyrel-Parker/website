{
    "id": "building-my-personal-website",
    "datePublished": "2025-07-26",
    "category": "Tutorial",
    "readTime": "2 min read",
    "wordCount": 274,
    "excerpt": "How I built a modern, responsive personal website using only vanilla web technologies and GitHub Pages.",
    "tags": [
        "web-development",
        "tutorial",
        "vanilla-js",
        "github-pages"
    ],
    "title": "Building My Personal Website with Vanilla HTML, CSS, and JavaScript",
    "content": "<p>When I decided to build my personal website, I had a choice to make: use a modern framework like <strong>React</strong> or <strong>Next.js</strong>, or stick with the fundamentals. I chose vanilla HTML, CSS, and JavaScript, and here's why.</p>\n\n<p><img src=\"../assets/images/blog/website-homepage.png\" alt=\"Homepage design\" class=\"blog-image center\"></p>\n\n<p>First, let me explain my requirements. I wanted a site that could showcase my applications, photography, book reviews, and eventually a blog. I needed it to be <em>fast</em>, <em>maintainable</em>, and <em>easy to deploy</em>.</p>\n\n<p>The decision to go vanilla wasn't just about simplicity—it was about understanding the web platform at its core. Every framework is built on these fundamentals, so mastering them makes you a better developer overall.</p>\n\n<p>For the design, I went with a modern gradient background and glassmorphism effects. The CSS uses <code class=\"blog-code-inline\">backdrop-filter</code> for that nice blurred glass effect you see on the cards. Here's a key snippet:</p>\n\n<div class=\"blog-code\">/<em> Glassmorphism effect </em>/\n.container {\n  background: rgba(255, 255, 255, 0.95);\n  backdrop-filter: blur(10px);\n  border-radius: 20px;\n  box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);\n}</div>\n\n<p><img src=\"../assets/images/blog/css-glassmorphism.png\" alt=\"Glassmorphism effect example\" class=\"blog-image small center\"></p>\n\n<p>The JavaScript architecture is modular. I separated concerns by using JSON files for data and keeping the logic clean. Each section (apps, photography, books) loads its data independently.</p>\n\n<blockquote class=\"blog-quote\">\"Sometimes the simple approach is the best approach.\" - This became my mantra throughout the project.</blockquote>\n\n<p>One interesting challenge was implementing the expandable book reviews. I used CSS transitions with <code class=\"blog-code-inline\">max-height</code> to create smooth expand/collapse animations without JavaScript animation libraries.</p>\n\n<p>Deployment to GitHub Pages was straightforward—just push to the main branch and enable Pages in the repository settings. <strong>No build process needed!</strong></p>\n\n<p>The result? A fast-loading, maintainable website that showcases my work effectively. Sometimes the simple approach is the best approach.</p>"
}